// <auto-generated />
using HotelListing.API.DataLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotelListing.API.Migrations
{
    [DbContext(typeof(HotelListingDbContext))]
    [Migration("20230531032614_seedingDbSets")]
    partial class seedingDbSets
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HotelListing.API.DataAccessLayer.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Abbreviation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Abbreviation = "JM",
                            Name = "Jamaica"
                        },
                        new
                        {
                            Id = 2,
                            Abbreviation = "KOR",
                            Name = "South Korea"
                        },
                        new
                        {
                            Id = 3,
                            Abbreviation = "FR",
                            Name = "France"
                        });
                });

            modelBuilder.Entity("HotelListing.API.DataAccessLayer.Models.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "1234 Main Street, Virginia Beach, VA 23452",
                            CountryId = 1,
                            Name = "Seoul Wyndam",
                            Rating = 3.5
                        },
                        new
                        {
                            Id = 2,
                            Address = "896 Duke Of Gloucester Street, Williamsburg, VA 23185",
                            CountryId = 2,
                            Name = "The DOG Street Inn",
                            Rating = 4.5
                        },
                        new
                        {
                            Id = 3,
                            Address = "455 Champse El-Assey, Paris 33442",
                            CountryId = 3,
                            Name = "Champee All I Say",
                            Rating = 5.0
                        });
                });

            modelBuilder.Entity("HotelListing.API.DataAccessLayer.Models.Hotel", b =>
                {
                    b.HasOne("HotelListing.API.DataAccessLayer.Models.Country", "Country")
                        .WithMany("Hotels")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("HotelListing.API.DataAccessLayer.Models.Country", b =>
                {
                    b.Navigation("Hotels");
                });
#pragma warning restore 612, 618
        }
    }
}
